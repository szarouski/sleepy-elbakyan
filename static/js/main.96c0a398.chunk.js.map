{"version":3,"sources":["components/NavItem/NavItem.js","components/NavItem/NavItemIcon.js","components/Nav/Nav.js","components/Logo/Logo.js","components/UserProfile/UserProfile.js","components/TopBar/TopBar.js","components/SubNav/SubNav.js","components/icons/search.svg","components/LaneFilter/LaneFilter.js","components/SideBar/SideBar.js","components/Content/Content.js","App.js","serviceWorker.js","helpers/fakeData.js","index.js"],"names":["NavItem","_this$props","this","props","children","type","href","react_default","a","createElement","NavLink","to","className","concat","PureComponent","types","alt","NavItemIcon","src","Object","assign","Nav","a11yText","_this$props$className","Logo","text","logoPath","UserProfile","name","picturePath","onClick","alert","TopBar","menu","appData","user","Logo_Logo","homePage","siteName","Nav_Nav","map","x","NavItem_NavItem","key","NavItemIcon_NavItemIcon","iconPath","UserProfile_UserProfile","withRouter","connect","_ref","Route","path","component","location","match","subNav","find","pathname","params","includes","length","_ref3","_extends","target","i","arguments","source","prototype","hasOwnProperty","call","apply","search_ref","id","d","search_ref2","transform","fill","xlinkHref","search_SvgComponent","xmlnsXlink","width","height","viewBox","LaneFilter","__webpack_require__","p","laneData","placeholder","_","groupBy","status","entries","sort","_ref2","slicedToArray","toLowerCase","value","LaneFilter_LaneList","LaneList","year","bidType","lane","remaining","watching","_ref4","watchingSeparator","watchingMessage","JSON","stringify","SideBar","filterTypes","exact","LaneFilter_LaneFilter","Content","App","react","Redirect","components_TopBar_TopBar","SubNav","components_SideBar_SideBar","components_Content_Content","Component","Boolean","window","hostname","Outbid","Watching","Winning","basePath","fakeData","Array","random","undefined","keys","store","createStore","render","es","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96c0a398.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {NavLink} from 'react-router-dom';\n\nexport default class NavItem extends PureComponent {\n  render() {\n    const {children, type, href} = this.props;\n    return <NavLink to={href} className={`nav-item${type ? `--${type}`: ''}`}>\n      {children}\n    </NavLink>;\n  }\n};\nNavItem.types = {\n  alt: 'alt'\n};\nNavItem.propTypes = {\n  type: PropTypes.string,\n  tag: PropTypes.string,\n};","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class NavItemIcon extends PureComponent {\n  render() {\n    const {src, alt} = this.props;\n    return <img {...{src}} alt={alt} className={'nav-item__icon'} />;\n  }\n};\nNavItemIcon.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired\n};","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Nav extends PureComponent {\n  render() {\n    const {a11yText, children, className = ''} = this.props;\n    return <nav className={`nav ${className}`}>\n      <h2 className={'o-a11y__element'}>{a11yText}</h2>\n      {children}\n    </nav>;\n  }\n};\nNav.propTypes = {\n  className: PropTypes.string,\n  a11yText: PropTypes.string.isRequired\n};","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {NavLink} from 'react-router-dom';\n\nexport default class Logo extends PureComponent {\n  render() {\n    const {href, text, logoPath, className = ''} = this.props;\n    return <h1 className={`logo ${className}`}>\n      <NavLink to={href}>\n        <img src={logoPath} alt={text}/>\n        <span className={'o-a11y__element'}>{text}</span>\n      </NavLink>\n    </h1>;\n  }\n};\nLogo.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string.isRequired,\n  logoPath: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class UserProfile extends PureComponent {\n  render() {\n    const {name, picturePath, className = ''} = this.props;\n    return <section className={`user-profile ${className}`}>\n      <h2 className={'o-a11y__skip'}>User profile</h2>\n      <img src={picturePath} alt={name} className={'user-profile__avatar'}/>\n      <button className={'user-profile__button'} type={'button'} onClick={() => alert('show user actions')}>\n        <span className={'user-profile__button-arrow'} />\n      </button>\n    </section>;\n  }\n};\nUserProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  picturePath: PropTypes.string.isRequired,\n  className: PropTypes.string\n};","import React, {PureComponent} from 'react';\nimport NavItem from \"../NavItem/NavItem\";\nimport ListItemIcon from \"../NavItem/NavItemIcon\";\nimport {connect} from \"react-redux\";\nimport Nav from \"../Nav/Nav\";\nimport Logo from \"../Logo/Logo\";\nimport UserProfile from \"../UserProfile/UserProfile\";\nimport {withRouter} from \"react-router-dom\";\n\nclass TopBar extends PureComponent {\n  render() {\n    const {menu, appData, user} = this.props;\n    return <div className={'top-bar'}>\n      <div className={'top-bar__item'}>\n        <Logo href={appData.homePage} text={appData.siteName} logoPath={appData.logoPath} className={'top-bar__logo'} />\n        <Nav a11yText={'Primary navigation'} className={'top-bar__nav'}>\n          {menu.map(x =>\n            <NavItem key={x.href} type={NavItem.types.alt} href={x.href}>\n              <ListItemIcon src={x.iconPath} alt={x.text}/>\n              {x.text}\n            </NavItem>)}\n        </Nav>\n      </div>\n      <UserProfile name={user.name} picturePath={user.picturePath} className={'top-bar__user-profile'} />\n    </div>;\n  }\n}\n\nexport default withRouter(connect(\n  ({menu, appData, user}) => ({menu, appData, user})\n)(TopBar));","import React, {PureComponent} from 'react';\nimport NavItem from \"../NavItem/NavItem\";\nimport {connect} from \"react-redux\";\nimport Nav from \"../Nav/Nav\";\nimport {Route, withRouter} from \"react-router-dom\";\n\nclass TopBar extends PureComponent {\n  render() {\n    const {menu} = this.props;\n    return <Route path=\"/:path\" component={({location, match}) => {\n      const {children: subNav} = menu.find(x => [location.pathname, `/${match.params.path}`].includes(x.href)) || {children: []};\n\n      return subNav.length ?\n             <div className={'sub-nav'}>\n               <div className={'sub-nav__item'}>\n                 <Nav a11yText={'Sub navigation'}>\n                   {subNav.map(x =>\n                     <NavItem href={x.href} key={x.href}>\n                       {x.text}\n                     </NavItem>)}\n                 </Nav>\n               </div>\n             </div> :\n             null;\n    }}/>;\n  }\n}\n\nexport default withRouter(connect(\n  ({menu}) => ({menu})\n)(TopBar));","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"path\", {\n  id: \"5seea\",\n  d: \"M278.58 145.33a.924.924 0 0 1-1.307 0l-2.4-2.401c-.013-.013-.022-.028-.034-.041a4.543 4.543 0 1 1 1.298-1.298c.014.011.029.02.042.033l2.4 2.4c.36.36.36.946 0 1.306zm-3.27-6.237a2.968 2.968 0 1 0-5.935 0 2.968 2.968 0 0 0 5.936 0z\"\n}));\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", {\n  transform: \"translate(-267 -134)\"\n}, React.createElement(\"use\", {\n  fill: \"#c1c1c2\",\n  xlinkHref: \"#5seea\"\n})));\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\"\n  }, props), _ref, _ref2);\n};\n\nexport default __webpack_public_path__ + \"static/media/search.1e857af3.svg\";\nexport { SvgComponent as ReactComponent };","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport {ReactComponent as Search} from \"../icons/search.svg\";\n\nexport default class LaneFilter extends PureComponent {\n  render() {\n    const {laneData} = this.props;\n    return <div className={'lane-filter'}>\n      <div className={'lane-filter__manage'}>\n        <div className={'lane-filter__search-box'}>\n          <input type=\"text\" placeholder={'Search Live Lanes'} className={'lane-filter__search'}/>\n          <button type={'button'} className={'lane-filter__search-button'}\n                  onClick={() => alert('Maybe search should just narrow as you type')}>\n            <Search />\n          </button>\n        </div>\n        <div className={'lane-filter__tabs'}>\n          <button type={'button'} className={'lane-filter__tab'} onClick={() => alert('Show all ;)')}>All</button>\n          {_(laneData)\n          .groupBy(x => x.status)\n          .entries()\n          .sort()\n          .map(([type, entries]) =>\n            <button type={'button'} className={'lane-filter__tab'} onClick={() => alert(`Show ${type}`)} key={type}>\n              {type}\n              <span className={`lane-filter__tab-number--${type.toLowerCase()}`}>\n                {entries.length}\n              </span>\n            </button>)\n          .value()}\n        </div>\n      </div>\n      <LaneList {...{laneData}}/>\n    </div>;\n  }\n};\nLaneFilter.propTypes = {\n  laneData: PropTypes.array.isRequired,\n  filterTypes: PropTypes.object.isRequired\n};\n\nclass LaneList extends PureComponent {\n  render() {\n    return this.props.laneData.map((x) => {\n      const {year, status, bidType, type, lane, remaining, watching} = x;\n      const [watchingSeparator, watchingMessage] =\n        watching > 0 ?\n          [', ', <span className={'lane-filter__watching'}>{watching} {watching === 1 ? 'is' : 'are'} on your watchlist</span>] :\n          [null, null];\n\n      return <div className={`lane-filter__entry--${status.toLowerCase()}`} key={JSON.stringify(x)}>\n        <button className={'lane-filter__entry-button'} onClick={() => alert(`Show ${type} bid info`)}>\n        <div>\n          <span className={`lane-filter__entry-lane`}>LANE {lane}</span>\n          <span className={'lane-filter__bid-type'}>{bidType}</span>\n        </div>\n        <div className={'lane-filter__car-info'}>{year} {type} is live</div>\n        <div>\n          <span className={'lane-filter__remaining'}>{remaining} Items remaining{watchingSeparator}</span>\n          {watchingMessage}\n        </div>\n        </button>\n      </div>;\n    });\n  }\n}\nLaneFilter.propTypes = {\n  laneData: PropTypes.array.isRequired\n};","import React, {PureComponent} from 'react';\nimport {connect} from \"react-redux\";\nimport LaneFilter from \"../LaneFilter/LaneFilter\";\nimport {Route, withRouter} from \"react-router-dom\";\n\nclass SideBar extends PureComponent {\n  render() {\n    const {laneData, filterTypes} = this.props;\n    return <Route path=\"/buy/live-lanes\" exact={true} component={() => {\n      return <div className={'side-bar'}>\n        <LaneFilter {...{laneData, filterTypes}} />\n      </div>;\n    }}/>;\n  }\n};\nSideBar.propTypes = {};\n\nexport default withRouter(connect(\n  ({laneData, filterTypes}) => ({laneData, filterTypes})\n)(SideBar));","import React, {PureComponent} from 'react';\nimport {withRouter} from \"react-router-dom\";\n\nclass Content extends PureComponent {\n  render() {\n    const {location} = this.props;\n    return <div className={'content'}>\n      <h1>Welcome to {location.pathname}</h1>\n    </div>;\n  }\n};\nContent.propTypes = {};\n\nexport default withRouter(Content);","import React, {Component, Fragment} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport './App.scss';\nimport TopNav from \"./components/TopBar/TopBar\";\nimport SubNav from \"./components/SubNav/SubNav\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport Content from \"./components/Content/Content\"\n\nclass App extends Component {\n  render() {\n    return <Fragment>\n      <Route path=\"/\" exact={true} component={() => <Redirect to={'/buy/live-lanes'} />} />\n      <Route path=\"/sleepy-elbakyan\" exact={true} component={() => <Redirect to={'/buy/live-lanes'} />} />\n      <Route path=\"/buy\" exact={true} component={() => <Redirect to={'/buy/live-lanes'} />} />\n      <TopNav />\n      <SubNav />\n      <main>\n        <SideBar />\n        <Content />\n      </main>\n    </Fragment>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import _ from \"lodash\";\n\n//generate randomized data similar to how it is showing on the psd\nconst filterTypes = {\n  Outbid: 'Outbid',\n  Watching: 'Watching',\n  Winning: 'Winning',\n};\nconst getCar = () => {\n  const status = _(filterTypes).keys().value()[_.random(2)];\n  return ({\n    year: [2008, 2011, 2014, 2014, 2014, 2010, 2011][_.random(6)],\n    status,\n    bidType: ['eBlock ON & QC', 'ESP Direct Montreal'][_.random(1)],\n    type: ['Honda Civic', 'GMC Sierra', 'Ford F-150', 'Chevrolet Equinox', 'Ford Escape', 'Ford Edge', 'Lincoln MKX'][_.random(\n      6)],\n    lane: ['A', 'B', 'C', 'D'][_.random(3)],\n    remaining: _.random(210),\n    watching: status ? _.random(1, 4) : 0\n  });\n};\n\nconst basePath = process.env.NODE_ENV === 'production' ? '/sleepy-elbakyan' : `/`;\nexport default {\n  appData: {\n    homePage: `${basePath}`,\n    siteName: 'EBlock',\n    logoPath: `${basePath}logo.png`\n  },\n  menu: [\n    {\n      href: `${basePath}buy`,\n      text: 'BUY',\n      iconPath: `${basePath}icons/list-icon.svg`,\n      children: [\n        {\n          text: 'UPCOMING',\n          href: `${basePath}buy/upcoming`\n        }, {\n          text: 'LIVE APPRAISALS',\n          href: `${basePath}buy/live-appraisals`\n        }, {\n          text: 'LIVE 24H AUCTIONS',\n          href: `${basePath}buy/live-24h-auctions`\n        }, {\n          text: 'LIVE LANES',\n          href: `${basePath}buy/live-lanes`\n        }\n      ],\n    },\n    {\n      href: `${basePath}sell`,\n      text: 'SELL',\n      iconPath: `${basePath}icons/car-icon.svg`,\n      children: [],\n    },\n    {\n      href: `${basePath}pending`,\n      text: 'PENDING',\n      iconPath: `${basePath}icons/timer-icon.svg`,\n      children: [],\n    },\n    {\n      href: `${basePath}finished`,\n      text: 'FINISHED',\n      iconPath: `${basePath}icons/gear-icon.svg`,\n      children: [],\n    },\n  ],\n  user: {\n    picturePath: 'https://picsum.photos/28/28',\n    name: 'John Doe'\n  },\n  laneData: Array(_.random(5, 20)).fill(undefined).map(getCar),\n  filterTypes\n};","import React from 'react';\nimport {render} from 'react-dom'\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport fakeData from \"./helpers/fakeData\";\n\nconst store = createStore(x => x, fakeData);\n\nrender(\n  <Provider store={store}>\n    <Router>\n      <App/>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}